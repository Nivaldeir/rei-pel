import { db } from '@/lib/db'
import excelToJson from 'convert-excel-to-json'
const output = excelToJson({
  sourceFile: 'prisma/base1.xlsx',
  columnToKey: {
    A: 'code',
    B: 'identification',
    C: 'name',
    D: 'razaoSocial',
    E: 'stateRegistration',
    F: 'classification',
    G: 'tell',
    J: 'city/state',
  },
}).Planilha1 as {
  code: string
  identification: string
  name: string
  stateRegistration: string
  razaoSocial: string
  classification: string
  tell: string
  'city/state': string
}[]

const product = excelToJson({
  sourceFile: 'prisma/pedidos.xls',
  columnToKey: {
    A: 'code',
    B: 'description',
    C: 'apres',
    D: 'ipi',
    G: 'table1',
    H: 'table2',
    I: 'table3',
  },
})['Planilha de Produtos'] as {
  code: number
  description: string
  apres: string
  ipi: number
  table1: number
  table2: number
  table3: number
}[]
const code = [
  '10732',
  '9024',
  '920',
  '974',
  '1968',
  '1972',
  '2016',
  '2064',
  '2092',
  '2098',
  '2101',
  '2124',
  '2190',
  '2245',
  '2301',
  '2721',
  '10790',
  '10807',
  '3728',
  '3753',
  '3772',
  '3773',
  '3881',
  '3917',
  '10814',
  '4273',
  '4376',
  '4571',
  '4625',
  '4906',
  '4988',
  '5174',
  '5410',
  '5581',
  '8349',
  '8389',
  '8437',
  '8442',
  '8481',
  '8497',
  '8499',
  '8542',
  '8595',
  '8661',
  '8676',
  '8850',
  '8887',
  '8938',
  '9089',
  '9094',
  '9096',
  '9207',
  '9314',
  '9645',
  '9678',
  '9711',
  '9721',
  '9747',
  '9771',
  '9779',
  '9786',
  '9790',
  '9791',
  '9806',
  '9809',
  '9815',
  '9850',
  '9851',
  '9859',
  '9940',
  '9953',
  '9973',
  '9998',
  '10066',
  '10072',
  '10086',
  '10098',
  '10212',
  '10228',
  '10268',
  '10341',
  '10342',
  '10374',
  '10425',
  '10524',
  '10533',
  '10548',
  '10549',
  '10562',
  '10580',
  '10588',
  '10592',
  '10595',
  '10630',
  '10631',
  '10653',
  '10671',
  '10682',
  '10722',
  '10726',
  '10744',
  '10860',
  '10870',
  '10906',
  '10916',
  '10917',
  '10921',
  '10922',
  '10933',
  '10941',
  '10974',
  '10978',
  '10984',
  '10958',
  '11049',
  '11026',
  '11034',
  '11005',
  '11007',
  '11090',
  '11088',
  '11099',
  '11113',
  '11145',
  '11147',
  '11150',
  '11151',
  '11154',
  '11172',
  '11162',
  '11165',
  '11174',
  '11175',
  '11176',
  '11178',
  '11184',
  '11192',
  '11195',
  '11205',
  '11207',
  '11209',
  '11227',
  '11239',
  '11240',
  '11247',
  '11261',
  '11264',
  '11277',
  '11282',
  '11293',
  '11300',
  '11308',
  '11318',
  '11327',
  '11332',
  '11350',
  '11375',
  '11379',
  '11380',
  '11505',
  '11401',
  '11405',
  '11407',
  '11426',
  '11430',
  '11387',
  '11388',
  '10074',
  '10075',
  '11448',
  '11451',
  '11459',
  '11467',
  '11535',
  '11536',
  '11476',
  '11496',
  '11550',
  '11551',
  '11600',
  '11582',
  '10621',
  '11613',
  '11625',
  '11648',
  '11651',
  '11668',
  '11687',
  '11729',
  '11731',
  '11745',
  '11753',
  '11710',
  '11766',
  '11767',
  '11779',
  '11788',
  '11825',
  '11843',
  '11848',
  '11794',
  '11805',
  '11815',
  '11816',
  '11857',
  '11861',
  '11862',
  '11863',
  '11871',
  '11875',
  '11878',
  '11894',
  '11897',
  '11898',
  '11899',
  '11913',
  '11919',
  '11925',
  '11956',
  '11962',
  '11972',
  '8361',
  '11981',
  '11985',
  '12027',
  '12029',
  '12038',
  '12047',
  '11995',
  '12006',
  '11952',
  '11953',
  '11954',
  '11955',
  '12053',
  '11618',
  '11621',
  '12103',
  '12107',
  '12110',
  '12122',
  '12124',
  '12133',
  '9571',
  '9574',
  '12154',
  '12155',
  '12168',
  '8787',
  '9898',
  '10302',
  '10525',
  '11219',
  '11397',
  '11629',
  '11947',
  '11965',
  '12076',
  '1942',
  '6632',
  '12183',
  '11533',
]
async function main() {
  // const data = await db.user.create({
  //   data: {
  //     city: 'RJ',
  //     code: '133',
  //     email: 'lildiasfigueiredo@gmail.com',
  //     password: '123',
  //     representative: 'TANALIMA',
  //     isAdmin: false,
  //   },
  // })
  // const clients = output
  //   .filter((e) => e.stateRegistration && e.tell && e['city/state'])
  //   .map((e) => {
  //     return {
  //       classification: e.classification,
  //       identification: e.identification,
  //       name: e.name,
  //       razaoSocial: e.razaoSocial,
  //       stateRegistration: e.stateRegistration,
  //       tell: e.tell,
  //       city: e['city/state'].split('/')[0],
  //       state: e['city/state'].split('/')[1].trim(),
  //       code: e.code.toString(),
  //       userId: data.id,
  //     }
  //   })
  //   .filter((e) => code.includes(e.code))
  // const client = await db.client.createMany({
  //   data: clients,
  // })
  const result = product
    .filter((e) => e.code && e.apres && e.table1)
    .map((e) => ({
      code: e.code.toString(),
      description: e.description,
      apres: e.apres,
      ipi: e.ipi.toString(),
      table1: e.table1,
      table2: e.table2,
      table3: e.table3,
    }))

  await db.product.createMany({
    data: result,
  })
}

main()
